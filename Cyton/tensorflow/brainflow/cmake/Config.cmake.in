@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@targets_export_name@.cmake")
check_required_components("@PROJECT_NAME@")

# in theory with lines above you can write smth like:
# target_link_libraries (target brainflow::GetData brainflow::BoardController)
# directly in dependend package CMakeLists.txt after find_package
# but it doesn't link libraries so it leads to linking error and I have no idea why
# workaround - set variables for include and library path and use these variables in package consumer code

set (@PROJECT_NAME@_INCLUDE_DIRS @package_inc_install_dir@)
set (@PROJECT_NAME@_LIBRARY_DIRS @package_lib_install_dir@)

if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    MESSAGE ("64 bits compiler detected")
    SET (PLATFORM_ACH "X64")
    SET (BOARD_CONTROLLER_NAME "BoardController" "libBoardController")
    SET (GET_DATA_NAME "GetData" "libGetData")
else (CMAKE_SIZEOF_VOID_P EQUAL 8)
    MESSAGE ("32 bits compiler detected")
    SET (PLATFORM_ACH "X86")
    SET (BOARD_CONTROLLER_NAME "BoardController32" "libBoardController32")
    SET (GET_DATA_NAME "GetData32" "libGetData32")
endif (CMAKE_SIZEOF_VOID_P EQUAL 8)

find_library (
    BoardControllerPath
    ${BOARD_CONTROLLER_NAME}
    PATHS @package_lib_install_dir@
)

find_library (
    GetDataPath
    ${GET_DATA_NAME}
    PATHS @package_lib_install_dir@
)
